// <auto-generated />
using System;
using Mercadona_V1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mercadona_V1.Migrations
{
    [DbContext(typeof(MercadonaDbContext))]
    partial class MercadonnaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategorieProduit", b =>
                {
                    b.Property<Guid>("CategoriescategorieID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("produitsproduitID")
                        .HasColumnType("uuid");

                    b.HasKey("CategoriescategorieID", "produitsproduitID");

                    b.HasIndex("produitsproduitID");

                    b.ToTable("CategorieProduit");
                });

            modelBuilder.Entity("Mercadona_V1.Models.Domain.Categorie", b =>
                {
                    b.Property<Guid>("categorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("categorieID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Mercadona_V1.Models.Domain.Produit", b =>
                {
                    b.Property<Guid>("produitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("enPromotion")
                        .HasColumnType("boolean");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("prix")
                        .HasColumnType("real");

                    b.HasKey("produitID");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("Mercadona_V1.Models.Domain.Promotion", b =>
                {
                    b.Property<Guid>("promotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("dateDebut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("remise")
                        .HasColumnType("integer");

                    b.HasKey("promotionID");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ProduitPromotion", b =>
                {
                    b.Property<Guid>("PromotionspromotionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("produitsproduitID")
                        .HasColumnType("uuid");

                    b.HasKey("PromotionspromotionID", "produitsproduitID");

                    b.HasIndex("produitsproduitID");

                    b.ToTable("ProduitPromotion");
                });

            modelBuilder.Entity("CategorieProduit", b =>
                {
                    b.HasOne("Mercadona_V1.Models.Domain.Categorie", null)
                        .WithMany()
                        .HasForeignKey("CategoriescategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mercadona_V1.Models.Domain.Produit", null)
                        .WithMany()
                        .HasForeignKey("produitsproduitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProduitPromotion", b =>
                {
                    b.HasOne("Mercadona_V1.Models.Domain.Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionspromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mercadona_V1.Models.Domain.Produit", null)
                        .WithMany()
                        .HasForeignKey("produitsproduitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
